on_game_start_after_lobby = {
	on_actions = {
		on_game_start_tribal_trouble_setup
		yearly_feudalization_pressure
		# delay = { days = 1 }
		on_game_start_tribal_trouble_pacts
	}
}

on_dynasty_created = {
	on_actions = {
		on_dynasty_created_dynasty_listing
	}
}

on_dynasty_created_dynasty_listing = {
	effect = {
		add_to_global_variable_list = {
			name = dynasties
			target = THIS
		}
	}
}

on_game_start_tribal_trouble_setup = {
	effect = {
		every_county = {
			set_variable = {
				name = neighboring_counties
				value = {
					every_neighboring_county = { add = 1 }
					min = 1
				}
			}
		}
		every_ruler = {
			# Initialize dynasties global variable list
			if = {
				limit = { exists = dynasty }
				dynasty = {
					add_to_global_variable_list = {
						name = dynasties
						target = THIS
					}
				}
			}
			# Tribal counts give out their extra counties
			if = {
				limit = {
					has_government = tribal_government
					highest_held_title_tier = tier_county
					domain_size > domain_limit
				}
				if = {
					limit = {
						OR = {
							is_independent_ruler = yes
							liege.highest_held_title_tier >= tier_kingdom
						}
					}
					create_titular_duchy = yes
				}
				else = {
					hand_out_counties = yes
				}
			}
			if = {
				limit = { has_government = tribal_government }
				switch = {
					trigger = primary_title.tier
					tier_county = { add_character_modifier = tribal_count_modifier }
					tier_duchy = { add_character_modifier = tribal_duke_modifier }
					tier_kingdom = { add_character_modifier = tribal_king_modifier }
					tier_empire = { add_character_modifier = tribal_emperor_modifier }
				}
				switch = {
					trigger = this.prestige_level
					0 = { add_character_modifier = tribal_prestige_level_0 }
					1 = { add_character_modifier = tribal_prestige_level_1 }
					2 = { add_character_modifier = tribal_prestige_level_2 }
					3 = { add_character_modifier = tribal_prestige_level_3 }
					4 = { add_character_modifier = tribal_prestige_level_4 }
					5 = { add_character_modifier = tribal_prestige_level_5 }
				}
			}
		}
	}
}

yearly_feudalization_pressure = {
	effect = {
		debug_log = "yearly_feudalization_pressure start"
		every_culture_global = {
			set_variable = {
				name = tribal_county
				value = 0
			}
			set_variable = {
				name = total_county
				value = 0
			}
		}
		every_religion_global = {
			every_faith = {
				set_variable = {
					name = tribal_county
					value = 0
				}
				set_variable = {
					name = total_county
					value = 0
				}
			}
		}
		every_in_global_list = {
			variable = dynasties
			set_variable = {
				name = tribal_county
				value = 0
			}
			set_variable = {
				name = total_county
				value = 0
			}
		}
		every_ruler = {
			if = {
				limit = { exists = var:total_county }
				remove_variable = total_county
			}
			if = {
				limit = { exists = var:tribal_county }
				remove_variable = tribal_county
			}
		}
		every_county = {
			culture = {
				change_variable = {
					name = total_county
					add = 1
				}
			}
			faith = {
				change_variable = {
					name = total_county
					add = 1
				}
			}
			if = {
				limit = {
					holder = { is_lowborn = no }					
					exists = holder.dynasty.var:total_county
				}
				holder.dynasty = {
					change_variable = {
						name = total_county
						add = 1
					}
				}
			}
			if = {
				limit = { exists = holder.var:total_county }
				holder = {
					change_variable = {
						name = total_county
						add = 1
					}
				}
			}
			else = {
				holder = {
					set_variable = {
						name = total_county
						value = 1
					}
					set_variable = {
						name = tribal_county
						value = 1
					}
				}
			}
			if = {
				# limit = { holder = { has_government = tribal_government }}
				limit = { any_county_province = { has_holding_type = tribal_holding }}
				culture = {
					change_variable = {
						name = tribal_county
						add = 1
					}
				}
				faith = {
					change_variable = {
						name = tribal_county
						add = 1
					}
				}
				if = {
					limit = {
						holder = { is_lowborn = no }					
						exists = holder.dynasty.var:total_county
					}
					holder.dynasty = {
						change_variable = {
							name = tribal_county
							add = 1
						}
					}
				}
				if = {
					limit = { exists = holder.var:total_county }
					holder = {
						change_variable = {
							name = tribal_county
							add = 1
						}
					}
				}
				else = {
					holder = {
						set_variable = {
							name = tribal_county
							value = 1
						}
					}
				}
			}
		}
		every_culture_global = {
			set_variable = {
				name = feudalization
				value = {
					add = var:total_county
					subtract = var:tribal_county
					divide = {
						add = var:total_county
						min = 1
					}
				}
			}
		}
		every_religion_global = {
			every_faith = {
				set_variable = {
					name = feudalization
					value = {
						add = var:total_county
						subtract = var:tribal_county
						divide = {
							add = var:total_county
							min = 1
						}
					}
				}
			}
		}
		every_in_global_list = {
			variable = dynasties
			set_variable = {
				name = feudalization
				value = {
					add = var:total_county
					subtract = var:tribal_county
					divide = {
						add = var:total_county
						min = 1
					}
				}
			}
		}
		debug_log = "yearly_feudalization_pressure end"
	}
}

on_game_start_tribal_trouble_pacts = {
	effect = {
		ordered_ruler = {
			limit = {
				has_government = tribal_government
				highest_held_title_tier >= tier_duchy
				OR = {
					is_independent_ruler = yes
					NOT = { liege = { has_government = tribal_government }}
				}
			}
			max = 5000
			check_range_bounds = no
			order_by = highest_held_title_tier
			create_story = { type = tribal_pact_story }
		}
		if = {
			limit = { current_date = 867.1.1 }
			if = {
				limit = { title:d_meath.holder = { has_government = tribal_government }}
				title:d_meath.holder = { add_realm_law = tribal_inheritance_succession }
			}
			if = {
				limit = { title:k_scotland.holder = { has_government = tribal_government }}
				title:k_scotland.holder = { add_realm_law = tribal_inheritance_succession }
			}
		}
	}
}

on_title_gain = {
	on_actions = {
		on_title_gain_join_pact
		on_title_gain_domain_limit
		on_title_gain_test
	}
}

# A title is transferred to a new character
# root = the new holder
# scope:title = the title that changes hands
# scope:previous_holder = previous holder. Might be dead
on_title_gain_join_pact = {
	trigger = {
		primary_title = scope:title
		scope:transfer_type = flag:granted
		liege = {
			has_variable = tribal_pact
			has_government = tribal_government
		}
		NOT = { has_variable = tribal_pact }
	}
	effect = {
		set_variable = {
			name = tribal_pact
			value = liege.var:tribal_pact
		}
		var:tribal_pact = {
			add_to_variable_list = {
				name = tribes_in_pact
				target = PREV
			}
		}
	}
}

on_title_gain_domain_limit = {
	trigger = {
		has_government = tribal_government
		highest_held_title_tier = tier_county
		domain_size > domain_limit
	}
	effect = {
		if = {
			limit = {
				OR = {
					is_independent_ruler = yes
					liege.highest_held_title_tier >= tier_kingdom
				}
			}
			create_titular_duchy = yes
		}
		else = {
			hand_out_counties = yes
		}
	}
}

on_title_gain_test = {
	# trigger = {
	# 	THIS = character:74026
	# }
	effect = {
		if = {
			limit = { is_ai = yes }
			debug_log = "dbg_log primary_heir on_title_gain is_ai = yes"
		}
		else = {
			debug_log = "dbg_log primary_heir on_title_gain is_ai = no"
			if = {
				limit = { liege = { is_alive = yes }}
				debug_log = "liege is_alive = yes"
			}
			else = { debug_log = "liege is_alive = no" }
		}
	}
}

on_vassal_gained = {
	on_actions = {
		on_vassal_gained_tribal_pact
	}
}

on_rank_up = {
	on_actions = {
		on_rank_up_tribal_pact
		on_rank_change_tribal_ruler
		# on_rank_up_tribal_holdings
		on_rank_up_test
	}
}

on_rank_down = {
	on_actions = {
		on_rank_change_tribal_ruler
		# on_rank_down_tribal_holdings
	}
}

on_rank_up_test = {
	trigger = {
		THIS = character:74026
	}
	effect = {
		if = {
			limit = { is_ai = yes }
			debug_log = "dbg_log primary_heir on_rank_up is_ai = yes"
		}
		else = {
			debug_log = "dbg_log primary_heir on_rank_up is_ai = no"
			if = {
				limit = { liege = { is_alive = yes }}
				debug_log = "liege is_alive = yes"
			}
			else = { debug_log = "liege is_alive = no" }
		}
	}
}

# A character gains a vassal
# root = character gaining vassal
# scope:vassal = vassal being gained
# scope:old_liege = the previous liege of the vassal. Might be the null character (vassal used to be a non-ruler or independent), so make sure to use "exists" checks where relevant
on_vassal_gained_tribal_pact = {
	trigger = { has_government = tribal_government }
	effect = {
		if = {
			limit = {
				has_variable = tribal_pact
			}
			debug_log = "dbg_log Tribal_Trouble vassal_gained"
			debug_log_scopes = yes
			var:tribal_pact = {
				scope:vassal = {
					set_variable = {
						name = tribal_pact
						value = PREV
					}
					PREV = {
						add_to_variable_list = {
							name = tribes_in_pact
							target = PREV
						}
					}
				}
			}
			if = {
				limit = { var:tribal_pact.var:tribal_leader = { has_realm_law = tribal_vassal_pact_alliance }}
				create_alliance = scope:vassal
			}
		}
		else = {
			debug_log = "dbg_log Tribal_Trouble bug on_vassal_gained tribal ruler doesn't have a tribal_pact"
			debug_log_scopes = no
		}
		if = {
			limit = {
				exists = scope:old_liege
				scope:old_liege = { exists = var:tribal_pact }
			}
			scope:old_liege.var:tribal_pact = {
				remove_list_variable = {
					name = tribes_in_pact
					target = scope:vassal
				}
			}
		}
	}
}

on_rank_up_tribal_pact = {
	effect = {
		if = {
			limit = {
				NOR = {
					exists = var:tribal_pact
					exists = liege.var:tribal_pact
				}
			}
			if = {
				limit = {
					has_government = tribal_government
					highest_held_title_tier >= tier_duchy
				}
				create_story = { type = tribal_pact_story }
			}
		}
		else_if = {
			limit = {
				NOT = { exists = var:tribal_pact }
				exists = liege.var:tribal_pact
			}
			if = {
				limit = { liege = { has_government = tribal_government }}
				liege.var:tribal_pact = {
					add_to_variable_list = {
						name = tribes_in_pact
						target = PREV
					}
				}
				set_variable = {
					name = tribal_pact
					value = liege.var:tribal_pact
				}
			}
			else = {
				if = {
					limit = {
						has_government = tribal_government
						highest_held_title_tier >= tier_duchy
					}
					create_story = { type = tribal_pact_story }
				}
			}
		}
		else_if = {
			limit = {
				exists = var:tribal_pact
				exists = liege.var:tribal_pact
			}
			if = {
				limit = {
					NOT = { var:tribal_pact = liege.var:tribal_pact }
					liege = { has_government = tribal_government }
				}
				var:tribal_pact = {
					remove_list_variable = {
						name = tribes_in_pact
						target = PREV
					}
				}
				liege.var:tribal_pact = {
					add_to_variable_list = {
						name = tribes_in_pact
						target = PREV
					}
				}
				set_variable = {
					name = tribal_pact
					value = liege.var:tribal_pact
				}
			}
		}
		else = { # exists = var:tribal_pact NOT = { exists = liege.var:tribal_pact }
			if = {
				limit = { NOT = { has_government = tribal_government }}
				var:tribal_pact = {
					remove_list_variable = {
						name = tribes_in_pact
						target = PREV
					}
				}
				remove_variable = tribal_pact
			}
			else_if = {
				limit = { NOT = { var:tribal_pact.var:tribal_leader = THIS }}
				var:tribal_pact = {
					remove_list_variable = {
						name = tribes_in_pact
						target = PREV
					}
				}
				if = { limit = { var:tribal_pact.var:tribal_inheritance_laws = flag:tribal_legitimacy_challenged } add_realm_law = tribal_legitimacy_challenged }
				else_if = { limit = { var:tribal_pact.var:tribal_inheritance_laws = flag:tribal_legitimacy_respected } add_realm_law = tribal_legitimacy_respected }
				else_if = { limit = { var:tribal_pact.var:tribal_inheritance_laws = flag:tribal_legitimacy_de_jure } add_realm_law = tribal_legitimacy_de_jure }
				if = { limit = { var:tribal_pact.var:tribal_inheritance_laws = flag:tribal_inheritance_traditional } add_realm_law = tribal_inheritance_traditional }
				else_if = { limit = { var:tribal_pact.var:tribal_inheritance_laws = flag:tribal_inheritance_assembly } add_realm_law = tribal_inheritance_assembly }
				else_if = { limit = { var:tribal_pact.var:tribal_inheritance_laws =  flag:tribal_inheritance_succession } add_realm_law = tribal_inheritance_succession }
				if = { limit = { var:tribal_pact.var:tribal_vassal_pact_laws = flag:tribal_vassal_pact_independence } add_realm_law = tribal_vassal_pact_independence }
				else_if = { limit = { var:tribal_pact.var:tribal_vassal_pact_laws = flag:tribal_vassal_pact_alliance } add_realm_law = tribal_vassal_pact_alliance }
				else_if = { limit = { var:tribal_pact.var:tribal_vassal_pact_laws = flag:tribal_vassal_pact_protection } add_realm_law = tribal_vassal_pact_protection }
				if = { limit = { var:tribal_pact.var:tribal_law_enforcement_laws = flag:tribal_law_enforcement_absent } add_realm_law = tribal_law_enforcement_absent }
				else_if = { limit = { var:tribal_pact.var:tribal_law_enforcement_laws = flag:tribal_law_enforcement_vassals } add_realm_law = tribal_law_enforcement_vassals }
				else_if = { limit = { var:tribal_pact.var:tribal_law_enforcement_laws = flag:tribal_law_enforcement_absolute } add_realm_law = tribal_law_enforcement_absolute }
				if = { limit = { var:tribal_pact.var:tribal_raiding_laws = flag:tribal_raiding_all } add_realm_law = tribal_raiding_all }
				else_if = { limit = { var:tribal_pact.var:tribal_raiding_laws = flag:tribal_raiding_top_liege } add_realm_law = tribal_raiding_top_liege }
				else_if = { limit = { var:tribal_pact.var:tribal_raiding_laws = flag:tribal_raiding_abolished } add_realm_law = tribal_raiding_abolished }
				create_story = { type = tribal_pact_story }
			}
		}
	}
}

on_rank_change_tribal_ruler = {
	trigger = {
		has_government = tribal_government
		is_landed = yes
	}
	effect = {
		remove_character_modifier = tribal_count_modifier
		remove_character_modifier = tribal_duke_modifier
		remove_character_modifier = tribal_king_modifier
		remove_character_modifier = tribal_emperor_modifier
		switch = {
			trigger = primary_title.tier
			tier_county = { add_character_modifier = tribal_count_modifier }
			tier_duchy = { add_character_modifier = tribal_duke_modifier }
			tier_kingdom = { add_character_modifier = tribal_king_modifier }
			tier_empire = { add_character_modifier = tribal_emperor_modifier }
		}
	}
}

on_prestige_level_gain = {
	on_actions = {
		on_prestige_level_change_tribal
	}
}

on_prestige_level_loss = {
	on_actions = {
		on_prestige_level_change_tribal
	}
}

on_prestige_level_change_tribal = {
	trigger = {
		is_landed = yes
		has_government = tribal_government
	}
	effect = {
		remove_character_modifier = tribal_prestige_level_0
		remove_character_modifier = tribal_prestige_level_1
		remove_character_modifier = tribal_prestige_level_2
		remove_character_modifier = tribal_prestige_level_3
		remove_character_modifier = tribal_prestige_level_4
		remove_character_modifier = tribal_prestige_level_5
		switch = {
			trigger = this.prestige_level
			0 = { add_character_modifier = tribal_prestige_level_0 }
			1 = { add_character_modifier = tribal_prestige_level_1 }
			2 = { add_character_modifier = tribal_prestige_level_2 }
			3 = { add_character_modifier = tribal_prestige_level_3 }
			4 = { add_character_modifier = tribal_prestige_level_4 }
			5 = { add_character_modifier = tribal_prestige_level_5 }
		}
	}
}

# on_rank_up_tribal_holdings = {
# 	trigger = {
# 		has_government = tribal_government
# 	}
# 	effect = {
# 		capital_county = {
# 			while = {
# 				limit = {
# 					any_county_province = {
# 						has_holding_type = tribal_holding
# 						count < max_tribal_holdings
# 					}
# 				}
# 				random_county_province = {
# 					limit = { NOT = { has_holding_type = tribal_holding }}
# 					add_building = tribe_01
# 				}
# 			}
# 		}
# 	}
# }

# on_rank_down_tribal_holdings = {
# 	trigger = {
# 		has_government = tribal_government
# 	}
# 	effect = {
# 		capital_county = {
# 			while = {
# 				limit = {
# 					any_county_province = {
# 						has_holding_type = tribal_holding
# 						count > max_tribal_holdings
# 					}
# 				}
# 				random_county_province = {
# 					limit = {
# 						NOT = { THIS = PREV.capital_province }
# 						has_holding_type = tribal_holding
# 					}
# 					add_building = tribe_01
# 				}
# 			}
# 		}
# 	}
# }

on_death = { on_actions = { on_death_test }}
on_death_test = {
	trigger = {
		is_ai = no
	}
	effect = {
		debug_log = "dbg_log on_death"
	}
}