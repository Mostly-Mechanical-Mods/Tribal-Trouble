# Can this character go on raids?
# root: the potential raider
can_raid = {
	#Scripted trigger used so that we can call on the same conditions in script.
	can_raid_trigger = yes
	trigger_if = {
		limit = { has_variable = tribal_pact }
		NOR = {
			has_realm_law = tribal_raiding_abolished
			AND = {
				has_realm_law = tribal_raiding_top_liege
				exists = var:tribal_pact.var:tribal_ruler
				NOT = { THIS = var:tribal_pact.var:tribal_leader }
			}
		}
	}
}

passes_faction_hard_block = {
	custom_description = {
		text = "FACTION_CANT_JOIN_IF_TARGET"
		NOT = { root = scope:target }
	}

	custom_description = {
		text = "FACTION_CANT_JOIN_CREATE_ADULT"
		is_adult = yes
	}
	
	#[Tribal_Trouble]
	custom_description = {
		text = "FACTION_CANT_JOIN_CREATE_ALLIED"
		trigger_if = {
			limit = { exists = scope:target }
			OR = {
				NOT = { is_allied_to = scope:target }
				AND = {
					has_government = tribal_government
					scope:target = { has_government = tribal_government }
				}
			}
		}
	}
	#[Tribal_Trouble]

	custom_description = {
		text = "FACTION_CANT_JOIN_CREATE_HOOK"
		trigger_if = {
			limit = { exists = scope:target }
			scope:target = {
				NOT = { has_strong_hook = root }
			}		
		}
	}

	custom_description = {
		text = "FACTION_CANT_JOIN_CREATE_IMPRISONED"
		is_imprisoned = no		
	}	

	custom_description = {
		text = "FACTION_CANT_JOIN_CREATE_INCAPABLE"
		NOT = { has_trait = incapable }
	}

	custom_description = {
		text = "character_blocked_from_joining"
		NOT = { has_character_flag = joining_faction_block }
	}

	custom_description = {
		text = "faction_relation_blocks_joining_friend"
		trigger_if = {
			limit = { exists = scope:target }
			NOT = {
				root = { has_relation_friend = scope:target }
			}
		}
	}

	custom_description = {
		text = "faction_relation_blocks_joining_lover"
		trigger_if = {
			limit = { exists = scope:target }
			NOR = {
				root = { has_relation_lover = scope:target }
				root = { has_secret_relation_lover = scope:target }
			}
		}
	}
}

# Is the alliance reason still valid
# Root = First character of alliance reason
# scope:second = Second character of alliance reason
is_alliance_valid = {
	
	#[NAP] Deactivate alliances between all tribal rulers, except for lieges with their vassals
	trigger_if = {
		limit = {
			has_government = tribal_government
			has_variable = tribal_pact
			NOT = { has_realm_law = tribal_vassal_pact_independence }
			THIS = scope:second.liege
			NOT = { THIS = scope:second }
		}
		always = yes
	}
	trigger_else = {
	#[/NAP]
		OR = {
			any_spouse = {
				this = scope:second
			}
			betrothed = scope:second
			is_parent_of = scope:second
			is_child_of = scope:second
			is_sibling_of = scope:second
			scope:second = {
				has_opinion_modifier = {
					modifier = perk_negotiated_alliance_opinion
					target = PREV
				}
			}
		}
	}
}
