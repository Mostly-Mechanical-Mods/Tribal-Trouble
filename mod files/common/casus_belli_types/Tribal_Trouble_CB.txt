tribal_trouble_vassalization_cb = {
	group = vassalization
	ai_only_against_neighbors = yes
	target_top_liege_if_outside_realm = no
	
	allowed_for_character = {
		has_government = tribal_government
		has_variable = tribal_pact
		exists = var:tribal_pact.var:tribal_leader
		var:tribal_pact.var:tribal_leader = THIS
	}

	# Root is the title
	# scope:attacker is the attacker
	# scope:defender is the defender
	
	allowed_against_character = {
		scope:attacker = { is_target_in_variable_list = { name = lost_vassals target = scope:defender }}
		scope:defender = {
			NOR = { # Can't vassalize holy orders or Heads of Faith
				any_held_title = {
					is_holy_order = yes
				}
				AND = {
					exists = faith.religious_head
					faith.religious_head = root
				}
			}
		}
		scope:attacker.primary_title.tier > scope:defender.primary_title.tier # Must be lower tier
	}
	
	cost = {
		piety = {
			value = 0
			if = { # Attacking your HoF is impious
				limit = {
					exists = scope:attacker.faith.religious_head
					scope:attacker.faith.religious_head = scope:defender
				}
				if = {
					limit = {
						scope:attacker.faith = {
							has_doctrine = doctrine_spiritual_head
						}
					}
					add = {
						value = massive_piety_value
						desc = CB_ATTACKER_HOF
					}
				}
				else = {
					add = {
						value = medium_piety_value
						desc = CB_ATTACKER_HOF
					}
				}
			}
			if = {
				limit = {
					scope:attacker.faith = scope:defender.faith
					scope:defender = {
						has_government = theocracy_government
					}
				}
				add = {
					value = medium_piety_value
					desc = CB_ATTACKER_THEOCRACY
				}
			}
		}
		prestige = {
			value = 0
			add = {
				desc = CB_SIZE_OF_TARGET_REALM_COST
				scope:defender = {
					every_sub_realm_county = {
						add = {
							value = 125
						}
					}
				}
			}
			if = {
				limit = {
					scope:defender.primary_title = {
						tier = tier_kingdom
					}
				}
				multiply = {
					value = 2
					desc = CB_VASSALIZING_KING
				}
			}

			#Innovation Prestige Discounts
			if = {
				limit = {
					scope:attacker = {
						culture = {
							has_innovation = innovation_chronicle_writing
							has_innovation = innovation_land_grants
							has_innovation = innovation_rightful_ownership
						}
					}
				}
				multiply = {
					value = 0.7
					desc = CB_ATTACKER_INNOVATIONS
				}
			}
			else_if = {
				limit = {
					scope:attacker = {
						culture = {
							OR = {
								has_innovation = innovation_chronicle_writing
								has_innovation = innovation_land_grants
							}
							OR = {
								has_innovation = innovation_land_grants
								has_innovation = innovation_rightful_ownership
							}
							OR = {
								has_innovation = innovation_chronicle_writing
								has_innovation = innovation_rightful_ownership
							}
						}
					}
				}
				multiply = {
					value = 0.8
					desc = CB_ATTACKER_INNOVATIONS
				}
			}
			else_if = {
				limit = {
					scope:attacker = {
						culture = {
							OR = {
								has_innovation = innovation_chronicle_writing
								has_innovation = innovation_land_grants
								has_innovation = innovation_rightful_ownership
							}
						}
					}
				}
				multiply = {
					value = 0.9
					desc = CB_ATTACKER_INNOVATIONS
				}
			}

			# Bellum Justum Perk
			if = {
				limit = {
					scope:attacker = {
						has_perk = bellum_justum_perk
					}
				}
				multiply = {
					add = bellum_justum_discount_percentage
					divide = 100
					desc = CB_ATTACKER_BELLUM_JUSTUM
				}
			}

			# Dynasty Warfare Perk
			if = {
				limit = {
					scope:attacker = {
						has_dynasty = yes
						dynasty = {
							has_dynasty_perk = warfare_legacy_2
						}
					}
				}
				multiply = {
					value = warfare_legacy_2_discount
					desc = CB_ATTACKER_DYNASTY_WARFARE
				}
			}

			# Vassal contract in-realm cost reduction
			if = {
				limit = {
					scope:attacker = {
						is_independent_ruler = no
						vassal_contract_has_flag = vassal_contract_war_override
						liege = scope:defender.liege
					}
				}
				multiply = {
					value = war_declaration_rights_allowed_cost_reduction
					desc = "CB_ATTACKER_VASSAL_CONTRACT"
				}
			}
			
			if = {
				limit = {
					has_game_rule = no_cost_casus_belli_costs
				}
				multiply = {
					value = 0
					desc = CB_GAME_RULE_NO_COST
				}
			}
		}
	}
	
	should_invalidate = {
		scope:defender.primary_title.tier >= scope:attacker.primary_title.tier
	}
	
	on_declaration = {
		on_declared_war = yes
	}	
	
	on_invalidated_desc = msg_vassalization_war_invalidated_message
	
	on_invalidated = {}

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = vassalization_cb_victory_desc_attacker
			}
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = vassalization_cb_victory_desc_defender
			}
			desc = vassalization_cb_victory_desc
		}
	}
	
	on_victory = {
		scope:attacker = { remove_list_variable = { name = lost_vassals target = scope:defender }}
		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = swear_fealty
			save_scope_as = change
			add_claim_on_loss = no
		}
		scope:defender = {
			change_liege = {
				liege = scope:attacker
				change = scope:change
			}
			resolve_title_and_vassal_change = scope:change
		}
		
		
		# Prestige level progress for the attacker
		scope:attacker = {
			add_prestige_experience = {
				value = medium_prestige_value
			}
		}

		# Prestige loss for the defender
		scope:defender = {
			add_prestige = {
				value = medium_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = {
				value = major_prestige_value
			}
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = {
				value = major_prestige_value
			}
			opinion = {
				modifier = contributed_in_war
			}
		}
		
		# Truce
		add_truce_attacker_victory_effect = yes
				
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = vassalization_cb_white_peace_desc_defender
			}
			desc = vassalization_cb_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { remove_list_variable = { name = lost_vassals target = scope:defender }}
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}
		
		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}

		# Truce
		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = vassalization_cb_white_peace_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = vassalization_cb_defeat_desc_attacker
			}
			desc = vassalization_cb_white_peace_desc
		}
	}
	
	on_defeat = {
		scope:attacker = { remove_list_variable = { name = lost_vassals target = scope:defender }}
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 3
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the defender
		scope:defender = {
			add_prestige = {
				value = medium_prestige_value
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}

		# Truce
		add_truce_attacker_defeat_effect = yes
		
		on_lost_aggression_war_discontent_loss = yes
	}
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "VASSALIZATION_WAR_NAME"
	war_name_base = "VASSALIZATION_WAR_NAME_BASE"
	cb_name = "VASSALIZATION_CB_NAME"
	interface_priority = 59
	
	ticking_war_score_targets_entire_realm = yes
	max_defender_score_from_occupation = 150
	max_attacker_score_from_occupation = 150
	attacker_ticking_warscore = 0
	attacker_wargoal_percentage = 0.8
	
	max_ai_diplo_distance_to_title = 500

	ai_score_mult = {
		value = 1
		# As a feudal gov never attack tribal for vassalization
		add = {
			if = {
				limit = {
					scope:attacker = {
						NOT = { has_government = tribal_government }
					}
					scope:defender = {
							has_government = tribal_government
					}
				}
				add = -1000
			}
		}
	}
}

# feudalization_resistence_submission_cb = {
# 	group = event
# 	mutually_exclusive_titles = {
# 		always = yes
# 	}

# 	allowed_for_character = {
# 		exists = var:tribal_pact
# 		var:tribal_pact.var:tribal_leader = THIS
# 	}

# 	allowed_against_character = {
# 		exists = var:tribal_pact
# 		var:tribal_pact.var:tribal_leader = scope:attacker
# 		var:tribal_pact.var:resistance_leader = THIS
# 	}

# 	cost = {}
	
# 	on_declaration = {
# 		on_declared_war = yes
# 	}

# 	should_invalidate = {
# 		scope:attacker = { NOT = { var:tribal_pact.var:tribal_leader = THIS }}
# 	}
	
# 	on_invalidated = {}
# 	on_invalidated_desc = msg_claim_war_invalidated_message

# 	on_victory_desc = {
# 		desc = feudalization_resistence_submission_cb_victory_desc
# 	}
	
# 	on_victory = {
# 		scope:attacker = { show_pow_release_message_effect = yes }
# 		# Set land acquisition type to conquest.
		

# 		modify_all_participants_fame_values = {
# 			WINNER = scope:attacker
# 			LOSER = scope:defender
# 			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
# 			IS_RELIGIOUS_WAR = no
# 			WINNER_FAME_SCALE = 10
# 			LOSER_FAME_SCALE = -10
# 			WINNER_ALLY_FAME_SCALE = 10
# 			LOSER_ALLY_FAME_SCALE = 10
# 		}

# 		# truce
# 		add_truce_attacker_victory_effect = yes

# 	}

# 	on_white_peace_desc = {
# 		first_valid = {
# 			triggered_desc = {
# 				trigger = { scope:defender = { is_local_player = yes } }
# 				desc = norman_conquest_cb_white_peace_desc_defender
# 			}
# 			triggered_desc = {
# 				trigger = { scope:attacker = { is_local_player = yes } }
# 				desc = norman_conquest_cb_white_peace_desc_attacker
# 			}
# 			desc = norman_conquest_cb_white_peace_desc
# 		}
# 	}
	
# 	on_white_peace = {
# 		scope:attacker = { show_pow_release_message_effect = yes }
		
# 		# press claims
# 		every_in_list = {
# 			list = target_titles
# 			if = {
# 				limit = { scope:attacker = { has_weak_claim_on = prev } }
# 				scope:attacker = {
# 					make_claim_strong = prev
# 				}
# 			}
# 		}
		
# 		setup_claim_cb = {
# 			titles = target_titles
# 			attacker = scope:attacker
# 			defender = scope:defender
# 			claimant = scope:claimant
# 			victory = no
# 		}

# 		# Small prestige penalty to the attacker for failing to win their own war.
# 		scope:attacker = {
# 			add_prestige = {
# 				value = scope:cb_prestige_factor # Set by 'setup_claim_cb'
# 				multiply = -5
# 			}
# 			stress_impact = {
#  				ambitious = medium_stress_impact_gain
#  				arrogant = medium_stress_impact_gain
#  			}
# 		}

# 		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
# 		modify_allies_of_participants_fame_values = {
# 			WINNER = scope:attacker
# 			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
# 			IS_RELIGIOUS_WAR = no
# 			WINNER_ALLY_FAME_SCALE = 10
# 			LOSER_ALLY_FAME_SCALE = 10
# 		}

# 		if = {
# 			limit = {
# 				NOT = { scope:claimant = scope:attacker }
# 				scope:claimant = {
# 					can_add_hook = {
# 						type = favor_hook
# 						target = scope:attacker
# 					}
# 				}
# 			}
# 			scope:claimant = {
# 				add_hook = {
# 					target = scope:attacker
# 					type = favor_hook
# 				}
# 			}
# 		}

# 		scope:defender = {
# 			stress_impact = {
# 				arrogant = medium_stress_impact_gain
# 			}
# 		}

# 		# Truce
# 		add_truce_white_peace_effect = yes
# 	}

# 	on_defeat_desc = {
# 		first_valid = {
# 			triggered_desc = {
# 				trigger = { scope:defender = { is_local_player = yes } }
# 				desc = norman_conquest_cb_defeat_desc_defender
# 			}
# 			triggered_desc = {
# 				trigger = { scope:attacker = { is_local_player = yes } }
# 				desc = norman_conquest_cb_defeat_desc_attacker
# 			}
# 			desc = norman_conquest_cb_defeat_desc
# 		}
# 	}
	
# 	on_defeat = {
# 		scope:attacker = { show_pow_release_message_effect = yes }
	
# 		# lose claims
# 		if = {
# 			limit = { scope:attacker = scope:claimant }
# 			every_in_list = {
# 				list = target_titles
# 				scope:claimant = {
# 					remove_claim = prev
# 				}
# 			}
# 		}

# 		if = {
# 			limit = {
# 				NOT = { scope:claimant = scope:attacker }
# 				scope:claimant = {
# 					can_add_hook = {
# 						type = favor_hook
# 						target = scope:attacker
# 					}
# 				}
# 			}
# 			scope:claimant = {
# 				add_hook = {
# 					target = scope:attacker
# 					type = favor_hook
# 				}
# 			}
# 		}
		
# 		# Award the appropriate amount of prestige to all participants in the war.
# 		setup_claim_cb = {
# 			titles = target_titles
# 			attacker = scope:attacker
# 			defender = scope:defender
# 			claimant = scope:claimant
# 			victory = no
# 		}
# 		modify_all_participants_fame_values = {
# 			WINNER = scope:defender
# 			LOSER = scope:attacker
# 			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
# 			IS_RELIGIOUS_WAR = no
# 			WINNER_FAME_SCALE = 10
# 			LOSER_FAME_SCALE = -10
# 			WINNER_ALLY_FAME_SCALE = 10
# 			LOSER_ALLY_FAME_SCALE = 10
# 		}

# 		# Truce
# 		add_truce_attacker_defeat_effect = yes
		
# 		scope:attacker = {
# 			save_temporary_scope_as = loser
# 		}
# 		on_lost_aggression_war_discontent_loss = yes
# 	}
	
# 	on_primary_attacker_death = inherit
# 	on_primary_defender_death = inherit
	
# 	transfer_behavior = transfer
	
# 	attacker_allies_inherit = yes
# 	defender_allies_inherit = yes
	
# 	war_name = "CLAIM_WAR_NAME"
# 	my_war_name = "CLAIM_WAR_NAME_MY"
# 	war_name_base = "CLAIM_WAR_NAME_BASE"
# 	cb_name = "CLAIM_CB_NAME"
# 	interface_priority = 60

# 	should_show_war_goal_subview = yes
	
# 	attacker_wargoal_percentage = 0.8
	
# 	max_ai_diplo_distance_to_title = 1000
# }
